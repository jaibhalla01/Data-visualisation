{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red15\green112\blue1;\red255\green255\blue255;\red0\green0\blue0;
\red157\green0\blue210;\red144\green1\blue18;\red0\green0\blue255;\red0\green0\blue109;\red101\green76\blue29;
\red19\green118\blue70;}
{\*\expandedcolortbl;;\cssrgb\c0\c50196\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c68627\c0\c85882;\cssrgb\c63922\c8235\c8235;\cssrgb\c0\c0\c100000;\cssrgb\c0\c6275\c50196;\cssrgb\c47451\c36863\c14902;
\cssrgb\c3529\c52549\c34510;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #!/usr/bin/env python\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # coding: utf-8\cf0 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 # In[ ]:\cf0 \cb1 \strokec4 \
\
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 import\cf0 \strokec4  dash\cb1 \
\cf5 \cb3 \strokec5 from\cf0 \strokec4  dash \cf5 \strokec5 import\cf0 \strokec4  dcc\cb1 \
\cf5 \cb3 \strokec5 from\cf0 \strokec4  dash \cf5 \strokec5 import\cf0 \strokec4  html\cb1 \
\cf5 \cb3 \strokec5 from\cf0 \strokec4  dash.dependencies \cf5 \strokec5 import\cf0 \strokec4  Input, Output\cb1 \
\cf5 \cb3 \strokec5 import\cf0 \strokec4  pandas \cf5 \strokec5 as\cf0 \strokec4  pd\cb1 \
\cf5 \cb3 \strokec5 import\cf0 \strokec4  plotly.graph_objs \cf5 \strokec5 as\cf0 \strokec4  go\cb1 \
\cf5 \cb3 \strokec5 import\cf0 \strokec4  plotly.express \cf5 \strokec5 as\cf0 \strokec4  px\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Load the data using pandas\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 data = pd.read_csv(\cf6 \strokec6 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DV0101EN-SkillsNetwork/Data\cf7 \strokec7 %20F\cf6 \strokec6 iles/historical_automobile_sales.csv'\cf0 \strokec4 )\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Initialize the Dash app\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 app = dash.Dash(\cf8 \strokec8 __name__\cf0 \strokec4 )\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Set the title of the dashboard\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #app.title = "Automobile Statistics Dashboard"\cf0 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 #---------------------------------------------------------------------------------\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Create the dropdown menu options\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 dropdown_options = [\cb1 \
\cb3     \{\cf6 \strokec6 'label'\cf0 \strokec4 : \cf6 \strokec6 'Yearly Statistics'\cf0 \strokec4 , \cf6 \strokec6 'value'\cf0 \strokec4 : \cf6 \strokec6 'Yearly Statistics'\cf0 \strokec4 \},\cb1 \
\cb3     \{\cf6 \strokec6 'label'\cf0 \strokec4 : \cf6 \strokec6 'Recession Period Statistics'\cf0 \strokec4 , \cf6 \strokec6 'value'\cf0 \strokec4 : \cf6 \strokec6 'Recession Period Statistics'\cf0 \strokec4 \}\cb1 \
\cb3 ]\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # List of years \cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 year_list = [i \cf5 \strokec5 for\cf0 \strokec4  i \cf5 \strokec5 in\cf0 \strokec4  \cf9 \strokec9 range\cf0 \strokec4 (\cf10 \strokec10 1980\cf0 \strokec4 , \cf10 \strokec10 2024\cf0 \strokec4 , \cf10 \strokec10 1\cf0 \strokec4 )]\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #---------------------------------------------------------------------------------------\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Create the layout of the app\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 app.layout = html.Div([\cb1 \
\cb3     \cf2 \strokec2 #TASK 2.1 Add title to the dashboard\cf0 \cb1 \strokec4 \
\cb3     html.H1(\cf6 \strokec6 "Automobile Sales Statistics Dashboard"\cf0 \strokec4 , \cf8 \strokec8 style\cf0 \strokec4 =\{\cf6 \strokec6 'textAlign'\cf0 \strokec4 :\cf6 \strokec6 'center'\cf0 \strokec4 , \cf6 \strokec6 'color'\cf0 \strokec4 :\cf6 \strokec6 '503D36'\cf0 \strokec4 , \cf6 \strokec6 'font-size'\cf0 \strokec4 :\cf10 \strokec10 24\cf0 \strokec4 \}),\cf2 \strokec2 #May include style for title\cf0 \cb1 \strokec4 \
\cb3     html.Div([\cf2 \strokec2 #TASK 2.2: Add two dropdown menus\cf0 \cb1 \strokec4 \
\cb3         html.Label(\cf6 \strokec6 "Select Statistics:"\cf0 \strokec4 ),\cb1 \
\cb3         dcc.Dropdown(\cb1 \
\cb3             \cf8 \strokec8 id\cf0 \strokec4 =\cf6 \strokec6 'dropdown-statistics'\cf0 \strokec4 ,\cb1 \
\cb3             \cf8 \strokec8 options\cf0 \strokec4 =[\cb1 \
\cb3             \{\cf6 \strokec6 'label'\cf0 \strokec4 : \cf6 \strokec6 'Yearly Statistics'\cf0 \strokec4 , \cf6 \strokec6 'value'\cf0 \strokec4 : \cf6 \strokec6 'Yearly Statistics'\cf0 \strokec4 \},\cb1 \
\cb3             \{\cf6 \strokec6 'label'\cf0 \strokec4 : \cf6 \strokec6 'Recession Period Statistics'\cf0 \strokec4 , \cf6 \strokec6 'value'\cf0 \strokec4 : \cf6 \strokec6 'Recession Period Statistics'\cf0 \strokec4 \}\cb1 \
\cb3         ],\cb1 \
\cb3             \cf8 \strokec8 value\cf0 \strokec4 =\cf6 \strokec6 'Select Statistics'\cf0 \strokec4 ,\cb1 \
\cb3             \cf8 \strokec8 placeholder\cf0 \strokec4 =\cf6 \strokec6 'Select a report type'\cf0 \cb1 \strokec4 \
\cb3         )\cb1 \
\cb3     ]),\cb1 \
\cb3     html.Div(dcc.Dropdown(\cb1 \
\cb3             \cf8 \strokec8 id\cf0 \strokec4 =\cf6 \strokec6 'select-year'\cf0 \strokec4 ,\cb1 \
\cb3             \cf8 \strokec8 options\cf0 \strokec4 =[\{\cf6 \strokec6 'label'\cf0 \strokec4 : i, \cf6 \strokec6 'value'\cf0 \strokec4 : i\} \cf5 \strokec5 for\cf0 \strokec4  i \cf5 \strokec5 in\cf0 \strokec4  year_list],\cb1 \
\cb3             \cf8 \strokec8 value\cf0 \strokec4 =\cf6 \strokec6 '1980'\cf0 \cb1 \strokec4 \
\cb3         )),\cb1 \
\cb3     html.Div([\cf2 \strokec2 #TASK 2.3: Add a division for output display\cf0 \cb1 \strokec4 \
\cb3     html.Div(\cf8 \strokec8 id\cf0 \strokec4 =\cf6 \strokec6 'output-container'\cf0 \strokec4 , \cf8 \strokec8 className\cf0 \strokec4 =\cf6 \strokec6 'chart-grid'\cf0 \strokec4 , \cf8 \strokec8 style\cf0 \strokec4 =\{\cf6 \strokec6 'display:flex'\cf0 \strokec4 \}),])\cb1 \
\cb3 ])\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #TASK 2.4: Creating Callbacks\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Define the callback function to update the input container based on the selected statistics\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 @app.callback\cf0 \strokec4 (\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     Output(\cf8 \strokec8 component_id\cf0 \strokec4 =\cf6 \strokec6 'select-year'\cf0 \strokec4 , \cf8 \strokec8 component_property\cf0 \strokec4 =\cf6 \strokec6 'disabled'\cf0 \strokec4 ),\cb1 \
\cb3     Input(\cf8 \strokec8 component_id\cf0 \strokec4 =\cf6 \strokec6 'dropdown-statistics'\cf0 \strokec4 ,\cf8 \strokec8 component_property\cf0 \strokec4 =\cf6 \strokec6 'value'\cf0 \strokec4 ))\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 def\cf0 \strokec4  \cf9 \strokec9 update_input_container\cf0 \strokec4 (\cf8 \strokec8 selected_statistics\cf0 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf5 \strokec5 if\cf0 \strokec4  selected_statistics ==\cf6 \strokec6 'Yearly Statistics'\cf0 \strokec4 : \cb1 \
\cb3         \cf5 \strokec5 return\cf0 \strokec4  \cf7 \strokec7 False\cf0 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 else\cf0 \strokec4 : \cb1 \
\cb3         \cf5 \strokec5 return\cf0 \strokec4  \cf7 \strokec7 True\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #Callback for plotting\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 # Define the callback function to update the input container based on the selected statistics\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 @app.callback\cf0 \strokec4 (\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     Output(\cf8 \strokec8 component_id\cf0 \strokec4 =\cf6 \strokec6 'output-container'\cf0 \strokec4 , \cf8 \strokec8 component_property\cf0 \strokec4 =\cf6 \strokec6 'children'\cf0 \strokec4 ),\cb1 \
\cb3     [Input(\cf8 \strokec8 component_id\cf0 \strokec4 =\cf6 \strokec6 'select-year'\cf0 \strokec4 , \cf8 \strokec8 component_property\cf0 \strokec4 =\cf6 \strokec6 'value'\cf0 \strokec4 ), \cb1 \
\cb3     Input(\cf8 \strokec8 component_id\cf0 \strokec4 =\cf6 \strokec6 'dropdown-statistics'\cf0 \strokec4 , \cf8 \strokec8 component_property\cf0 \strokec4 =\cf6 \strokec6 'value'\cf0 \strokec4 )])\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 def\cf0 \strokec4  \cf9 \strokec9 update_output_container\cf0 \strokec4 (\cf8 \strokec8 input_year\cf0 \strokec4 , \cf8 \strokec8 selected_statistics\cf0 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf5 \strokec5 if\cf0 \strokec4  selected_statistics == \cf6 \strokec6 'Recession Period Statistics'\cf0 \strokec4 :\cb1 \
\cb3         \cf2 \strokec2 # Filter the data for recession periods\cf0 \cb1 \strokec4 \
\cb3         recession_data = data[data[\cf6 \strokec6 'Recession'\cf0 \strokec4 ] == \cf10 \strokec10 1\cf0 \strokec4 ]\cb1 \
\cb3         \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 #TASK 2.5: Create and display graphs for Recession Report Statistics\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb3         yearly_rec = recession_data.groupby(\cf6 \strokec6 'Year'\cf0 \strokec4 )[\cf6 \strokec6 'Automobile_Sales'\cf0 \strokec4 ].mean().reset_index()\cb1 \
\cb3         R_chart1 = dcc.Graph(\cb1 \
\cb3             \cf8 \strokec8 figure\cf0 \strokec4 =px.line(yearly_rec, \cf8 \strokec8 x\cf0 \strokec4 =\cf6 \strokec6 'Year'\cf0 \strokec4 , \cf8 \strokec8 y\cf0 \strokec4 =\cf6 \strokec6 'Automobile_Sales'\cf0 \strokec4 , \cf8 \strokec8 title\cf0 \strokec4 =\cf6 \strokec6 "Automobile Sales over Recession Period"\cf0 \strokec4 )\cb1 \
\cb3         )\cb1 \
\
\cb3         \cf2 \strokec2 # Plot 2: Calculate the average number of vehicles sold by vehicle type and represent as a Bar chart\cf0 \cb1 \strokec4 \
\cb3         avg_vehicle_sales = recession_data.groupby(\cf6 \strokec6 'Vehicle_Type'\cf0 \strokec4 )[\cf6 \strokec6 'Automobile_Sales'\cf0 \strokec4 ].mean().reset_index()\cb1 \
\cb3         R_chart2 = dcc.Graph(\cb1 \
\cb3             \cf8 \strokec8 figure\cf0 \strokec4 =px.bar(avg_vehicle_sales, \cf8 \strokec8 x\cf0 \strokec4 =\cf6 \strokec6 'Vehicle_Type'\cf0 \strokec4 , \cf8 \strokec8 y\cf0 \strokec4 =\cf6 \strokec6 'Automobile_Sales'\cf0 \strokec4 , \cf8 \strokec8 title\cf0 \strokec4 =\cf6 \strokec6 "Average Vehicle Sales by Type"\cf0 \strokec4 )\cb1 \
\cb3         )\cb1 \
\
\cb3         \cf2 \strokec2 # Plot 3: Pie chart for total expenditure share by vehicle type during recessions\cf0 \cb1 \strokec4 \
\cb3         exp_rec = recession_data.groupby(\cf6 \strokec6 'Vehicle_Type'\cf0 \strokec4 )[\cf6 \strokec6 'Advertising_xpenditure'\cf0 \strokec4 ].sum().reset_index()\cb1 \
\cb3         R_chart3 = dcc.Graph(\cb1 \
\cb3             \cf8 \strokec8 figure\cf0 \strokec4 =px.pie(exp_rec, \cf8 \strokec8 values\cf0 \strokec4 =\cf6 \strokec6 'Expenditure'\cf0 \strokec4 , \cf8 \strokec8 names\cf0 \strokec4 =\cf6 \strokec6 'Vehicle_Type'\cf0 \strokec4 , \cf8 \strokec8 title\cf0 \strokec4 =\cf6 \strokec6 "Expenditure Share by Vehicle Type"\cf0 \strokec4 )\cb1 \
\cb3         )\cb1 \
\
\cb3         \cf2 \strokec2 # Plot 4: Develop a Bar chart for the effect of unemployment rate on vehicle type and sales\cf0 \cb1 \strokec4 \
\cb3         unemployment_effect = recession_data.groupby(\cf6 \strokec6 'Vehicle_Type'\cf0 \strokec4 )[[\cf6 \strokec6 'unemployment_tate'\cf0 \strokec4 , \cf6 \strokec6 'Automobile_Sales'\cf0 \strokec4 ]].mean().reset_index()\cb1 \
\cb3         R_chart4 = dcc.Graph(\cb1 \
\cb3             \cf8 \strokec8 figure\cf0 \strokec4 =px.bar(unemployment_effect, \cf8 \strokec8 x\cf0 \strokec4 =\cf6 \strokec6 'Vehicle_Type'\cf0 \strokec4 , \cf8 \strokec8 y\cf0 \strokec4 =\cf6 \strokec6 'Automobile_Sales'\cf0 \strokec4 , \cf8 \strokec8 color\cf0 \strokec4 =\cf6 \strokec6 'Unemployment_Rate'\cf0 \strokec4 ,\cb1 \
\cb3                           \cf8 \strokec8 title\cf0 \strokec4 =\cf6 \strokec6 "Effect of Unemployment Rate on Vehicle Type and Sales"\cf0 \strokec4 )\cb1 \
\cb3         )\cb1 \
\
\cb3         \cf5 \strokec5 return\cf0 \strokec4  [\cb1 \
\cb3             html.Div(\cf8 \strokec8 className\cf0 \strokec4 =\cf6 \strokec6 'chart-item'\cf0 \strokec4 , \cf8 \strokec8 children\cf0 \strokec4 =[html.Div(\cf8 \strokec8 children\cf0 \strokec4 =R_chart1),html.Div(\cf8 \strokec8 children\cf0 \strokec4 =R_chart2)]),\cb1 \
\cb3             html.Div(\cf8 \strokec8 className\cf0 \strokec4 =\cf6 \strokec6 'chart-item'\cf0 \strokec4 , \cf8 \strokec8 children\cf0 \strokec4 =[html.Div(\cf8 \strokec8 children\cf0 \strokec4 =R_chart3),html.Div(\cf8 \strokec8 children\cf0 \strokec4 =R_chart4)])\cb1 \
\cb3         ]\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # TASK 2.6: Create and display graphs for Yearly Report Statistics\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3  \cf2 \strokec2 # Yearly Statistic Report Plots                             \cf0 \cb1 \strokec4 \
\cb3    \cf2 \strokec2 # Inside the callback function\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # ...\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf5 \strokec5 elif\cf0 \strokec4  (input_year \cf7 \strokec7 and\cf0 \strokec4  selected_statistics == \cf6 \strokec6 'Yearly Statistics'\cf0 \strokec4 ):\cb1 \
\cb3         yearly_data = data[data[\cf6 \strokec6 'Year'\cf0 \strokec4 ] == input_year]\cb1 \
\
\cb3         \cf2 \strokec2 # Plot 1: Yearly Automobile sales using line chart for the whole period\cf0 \cb1 \strokec4 \
\cb3         yas = yearly_data.groupby(\cf6 \strokec6 'Year'\cf0 \strokec4 )[\cf6 \strokec6 'Automobile_Sales'\cf0 \strokec4 ].mean().reset_index()\cb1 \
\cb3         Y_chart1 = dcc.Graph(\cb1 \
\cb3             \cf8 \strokec8 figure\cf0 \strokec4 =px.line(yas, \cf8 \strokec8 x\cf0 \strokec4 =\cf6 \strokec6 'Year'\cf0 \strokec4 , \cf8 \strokec8 y\cf0 \strokec4 =\cf6 \strokec6 'Automobile_Sales'\cf0 \strokec4 , \cf8 \strokec8 title\cf0 \strokec4 =\cf6 \strokec6 'Yearly Automobile Sales for the whole period'\cf0 \strokec4 )\cb1 \
\cb3         )\cb1 \
\
\cb3         \cf2 \strokec2 # Plot 2: Total Monthly Automobile sales using line chart\cf0 \cb1 \strokec4 \
\cb3         yas_monthly = yearly_data.groupby(\cf6 \strokec6 'Month'\cf0 \strokec4 )[\cf6 \strokec6 'Automobile_Sales'\cf0 \strokec4 ].sum().reset_index()\cb1 \
\cb3         Y_chart2 = dcc.Graph(\cb1 \
\cb3             \cf8 \strokec8 figure\cf0 \strokec4 =px.line(yas_monthly, \cf8 \strokec8 x\cf0 \strokec4 =\cf6 \strokec6 'Month'\cf0 \strokec4 , \cf8 \strokec8 y\cf0 \strokec4 =\cf6 \strokec6 'Automobile_Sales'\cf0 \strokec4 , \cf8 \strokec8 title\cf0 \strokec4 =\cf6 \strokec6 'Total Monthly Automobile Sales'\cf0 \strokec4 )\cb1 \
\cb3         )\cb1 \
\
\cb3         \cf2 \strokec2 # Plot 3: Bar chart for average number of vehicles sold during the given year\cf0 \cb1 \strokec4 \
\cb3         avr_vdata = yearly_data.groupby(\cf6 \strokec6 'Vehicle_Type'\cf0 \strokec4 )[\cf6 \strokec6 'Automobile_Sales'\cf0 \strokec4 ].mean().reset_index()\cb1 \
\cb3         Y_chart3 = dcc.Graph(\cb1 \
\cb3             \cf8 \strokec8 figure\cf0 \strokec4 =px.bar(avr_vdata, \cf8 \strokec8 x\cf0 \strokec4 =\cf6 \strokec6 'Vehicle_Type'\cf0 \strokec4 , \cf8 \strokec8 y\cf0 \strokec4 =\cf6 \strokec6 'Automobile_Sales'\cf0 \strokec4 ,\cb1 \
\cb3                         \cf8 \strokec8 title\cf0 \strokec4 =\cf7 \strokec7 f\cf6 \strokec6 'Average Vehicles Sold by Vehicle Type in the year \cf7 \strokec7 \{\cf0 \strokec4 input_year\cf7 \strokec7 \}\cf6 \strokec6 '\cf0 \strokec4 )\cb1 \
\cb3         )\cb1 \
\
\cb3         \cf2 \strokec2 # Plot 4: Total Advertisement Expenditure for each vehicle using pie chart\cf0 \cb1 \strokec4 \
\cb3         exp_vehicle = yearly_data.groupby(\cf6 \strokec6 'Vehicle_Type'\cf0 \strokec4 )[\cf6 \strokec6 'Advertising_Expenditure'\cf0 \strokec4 ].sum().reset_index()\cb1 \
\cb3         Y_chart4 = dcc.Graph(\cb1 \
\cb3             \cf8 \strokec8 figure\cf0 \strokec4 =px.pie(exp_vehicle, \cf8 \strokec8 values\cf0 \strokec4 =\cf6 \strokec6 'Advertising_Expenditure'\cf0 \strokec4 , \cf8 \strokec8 names\cf0 \strokec4 =\cf6 \strokec6 'Vehicle_Type'\cf0 \strokec4 ,\cb1 \
\cb3                         \cf8 \strokec8 title\cf0 \strokec4 =\cf6 \strokec6 'Total Advertisement Expenditure for each vehicle'\cf0 \strokec4 )\cb1 \
\cb3         )\cb1 \
\
\cb3         \cf5 \strokec5 return\cf0 \strokec4  [\cb1 \
\cb3             html.Div(\cf8 \strokec8 className\cf0 \strokec4 =\cf6 \strokec6 'chart-item'\cf0 \strokec4 , \cf8 \strokec8 children\cf0 \strokec4 =[html.Div(\cf8 \strokec8 children\cf0 \strokec4 =Y_chart1), html.Div(\cf8 \strokec8 children\cf0 \strokec4 =Y_chart2)]),\cb1 \
\cb3             html.Div(\cf8 \strokec8 className\cf0 \strokec4 =\cf6 \strokec6 'chart-item'\cf0 \strokec4 , \cf8 \strokec8 children\cf0 \strokec4 =[html.Div(\cf8 \strokec8 children\cf0 \strokec4 =Y_chart3), html.Div(\cf8 \strokec8 children\cf0 \strokec4 =Y_chart4)]),\cb1 \
\cb3         ]\cb1 \
\
\cb3     \cf5 \strokec5 else\cf0 \strokec4 :\cb1 \
\cb3         \cf5 \strokec5 return\cf0 \strokec4  \cf7 \strokec7 None\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Run the Dash app\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 if\cf0 \strokec4  \cf8 \strokec8 __name__\cf0 \strokec4  == \cf6 \strokec6 '__main__'\cf0 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     app.run_server(\cf8 \strokec8 debug\cf0 \strokec4 =\cf7 \strokec7 True\cf0 \strokec4 )\cb1 \
\
\
}